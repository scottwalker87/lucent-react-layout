import { ReactNode, FC } from 'react';

/**
 * –†–µ–∂–∏–º—ã —Ç–µ–º—ã –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.Constants.ThemeMode
 */
declare const THEME_MODE_LIGHT = "light";
declare const THEME_MODE_DARK = "dark";
/**
 * –†–µ–∂–∏–º—ã —à–∞–ø–∫–∏
 * @namespace Lucent.Constants.HeaderMode
 */
declare const HEADER_MODE_VISIBLE = "visible";
declare const HEADER_MODE_HIDDEN = "hidden";
/**
 * –†–µ–∂–∏–º—ã —Ñ—É—Ç–µ—Ä–∞
 * @namespace Lucent.Constants.FooterMode
 */
declare const FOOTER_MODE_VISIBLE = "visible";
declare const FOOTER_MODE_HIDDEN = "hidden";
/**
 * –†–µ–∂–∏–º—ã —Å–∞–π–¥–±–∞—Ä–∞
 * @namespace Lucent.Constants.SidebarMode
 */
declare const SIDEBAR_MODE_VISIBLE = "visible";
declare const SIDEBAR_MODE_HIDDEN = "hidden";
declare const SIDEBAR_MODE_COLLAPSED = "collapsed";
declare const SIDEBAR_MODE_EXPANDED = "expanded";
/**
 * –†–µ–∂–∏–º—ã –∏–Ω—Ñ–æ–±–∞—Ä–∞
 * @namespace Lucent.Constants.InfobarMode
 */
declare const INFOBAR_MODE_VISIBLE = "visible";
declare const INFOBAR_MODE_HIDDEN = "hidden";
declare const INFOBAR_MODE_COLLAPSED = "collapsed";
declare const INFOBAR_MODE_EXPANDED = "expanded";

/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–µ–º—ã
 * @namespace Lucent.Theme
 */
type ThemeMode = typeof THEME_MODE_LIGHT | typeof THEME_MODE_DARK;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —à–∞–ø–∫–∏
 * @namespace Lucent.HeaderVisible
 */
type HeaderVisibleMode = typeof HEADER_MODE_VISIBLE | typeof HEADER_MODE_HIDDEN;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ—É—Ç–µ—Ä–∞
 * @namespace Lucent.FooterVisible
 */
type FooterVisibleMode = typeof FOOTER_MODE_VISIBLE | typeof FOOTER_MODE_HIDDEN;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞
 * @namespace Lucent.SidebarVisible
 */
type SidebarVisibleMode = typeof SIDEBAR_MODE_VISIBLE | typeof SIDEBAR_MODE_HIDDEN;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 * @namespace Lucent.SidebarCollapsed
 */
type SidebarCollapsedMode = typeof SIDEBAR_MODE_COLLAPSED | typeof SIDEBAR_MODE_EXPANDED;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
 * @namespace Lucent.InfobarVisible
 */
type InfobarVisibleMode = typeof INFOBAR_MODE_VISIBLE | typeof INFOBAR_MODE_HIDDEN;
/**
 * –¢–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ñ–æ–±–∞—Ä–∞
 * @namespace Lucent.InfobarCollapsed
 */
type InfobarCollapsedMode = typeof INFOBAR_MODE_COLLAPSED | typeof INFOBAR_MODE_EXPANDED;
/**
 * –†–µ–∂–∏–º—ã –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutModes
 */
type LayoutModes = {
    theme?: ThemeMode;
    headerVisible?: HeaderVisibleMode;
    footerVisible?: FooterVisibleMode;
    sidebarVisible?: SidebarVisibleMode;
    sidebarCollapsed?: SidebarCollapsedMode;
    infobarVisible?: InfobarVisibleMode;
    infobarCollapsed?: InfobarCollapsedMode;
};
/**
 * –°–ª–æ—Ç—ã –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutSlots
 */
type LayoutSlots = {
    sidebar?: SidebarSlots;
    header?: ReactNode;
    content: ReactNode;
    infobar?: ReactNode;
    footer?: ReactNode;
};
/**
 * –°–ª–æ—Ç—ã –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 * @namespace Lucent.SidebarSlots
 */
type SidebarSlots = {
    header?: ReactNode;
    body?: ReactNode;
    footer?: ReactNode;
};
/**
 * –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ–∂–∏–º–æ–≤ –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutMode
 */
type LayoutMode = keyof LayoutModes;
/**
 * –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutModeValue
 */
type LayoutModeValue = LayoutModes[LayoutMode] | null;
/**
 * –í–∞—Ä–∏–∞–Ω—Ç—ã —Å–ª–æ—Ç–æ–≤ –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutSlot
 */
type LayoutSlot = keyof LayoutSlots;
/**
 * –ó–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ—Ç–∞ –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutSlotValue
 */
type LayoutSlotValue = LayoutSlots[LayoutSlot] | null;
/**
 * –í–∞—Ä–∏–∞–Ω—Ç—ã —Å–ª–æ—Ç–æ–≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 * @namespace Lucent.SidebarSlot
 */
type SidebarSlot = keyof SidebarSlots;
/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutConfig
 */
type LayoutConfig = {
    modes: LayoutModes;
    slots: LayoutSlots;
};
/**
 * API –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.LayoutApi
 * @see Lucent.Provider
 *
 * @property {LayoutModes} modes - —Ä–µ–∂–∏–º—ã –º–∞–∫–µ—Ç–∞
 * @property {LayoutSlots} slots - —Å–ª–æ—Ç—ã –º–∞–∫–µ—Ç–∞
 *
 * @property {function} setModes - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º—ã
 * @property {function} setMode - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º
 * @property {function} setSlots - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–æ—Ç—ã
 * @property {function} setSlot - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–æ—Ç
 * @property {function} setSidebarSlots - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–æ—Ç—ã –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 * @property {function} setSidebarSlot - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–æ—Ç –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 *
 * @property {function} getMode - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∂–∏–º
 * @property {function} getSlot - –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ—Ç
 * @property {function} getSidebarSlot - –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ—Ç –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 *
 * @property {function} isThemeDark - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç–µ–º–Ω–æ–π
 * @property {function} isHeaderHidden - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —à–∞–ø–∫–∞ —Å–∫—Ä—ã—Ç–æ–π
 * @property {function} isFooterHidden - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ—É—Ç–µ—Ä —Å–∫—Ä—ã—Ç—ã–º
 * @property {function} isSidebarCollapsed - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–∞–π–¥–±–∞—Ä —Å–≤–µ—Ä–Ω—É—Ç–æ–π
 * @property {function} isSidebarHidden - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–∞–π–¥–±–∞—Ä —Å–∫—Ä—ã—Ç—ã–º
 * @property {function} isInfobarCollapsed - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–Ω—Ñ–æ–±–∞—Ä —Å–≤–µ—Ä–Ω—É—Ç—ã–º
 * @property {function} isInfobarHidden - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–Ω—Ñ–æ–±–∞—Ä —Å–∫—Ä—ã—Ç—ã–º
 *
 * @property {function} hasSidebar - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Å–∞–π–¥–±–∞—Ä
 * @property {function} hasHeader - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —à–∞–ø–∫–∞
 * @property {function} hasContent - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
 * @property {function} hasInfobar - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ–±–∞—Ä
 * @property {function} hasFooter - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ñ—É—Ç–µ—Ä
 *
 * @property {function} toggleThemeMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–µ–º—ã
 * @property {function} toggleHeaderVisibleMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —à–∞–ø–∫–∏
 * @property {function} toggleFooterVisibleMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ñ—É—Ç–µ—Ä–∞
 * @property {function} toggleSidebarVisibleMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Å–∞–π–¥–±–∞—Ä–∞
 * @property {function} toggleSidebarCollapsedMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Å–∞–π–¥–±–∞—Ä–∞
 * @property {function} toggleInfobarVisibleMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∏–Ω—Ñ–æ–±–∞—Ä–∞
 * @property {function} toggleInfobarCollapsedMode - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∏–Ω—Ñ–æ–±–∞—Ä–∞
 */
type LayoutApi = {
    modes: LayoutModes;
    slots: LayoutSlots;
    setModes: (modes: LayoutModes) => void;
    setMode: (mode: LayoutMode, value: LayoutModeValue) => void;
    setSlots: (slots: LayoutSlots) => void;
    setSlot: (slot: LayoutSlot, value: LayoutSlotValue) => void;
    setSidebarSlots: (slots: SidebarSlots) => void;
    setSidebarSlot: (slot: SidebarSlot, value: ReactNode) => void;
    getMode: (mode: LayoutMode) => LayoutModeValue;
    getSlot: (slot: LayoutSlot) => LayoutSlotValue;
    getSidebarSlot: (slot: SidebarSlot) => ReactNode;
    isThemeDark: () => boolean;
    isHeaderHidden: () => boolean;
    isFooterHidden: () => boolean;
    isSidebarCollapsed: () => boolean;
    isSidebarHidden: () => boolean;
    isInfobarCollapsed: () => boolean;
    isInfobarHidden: () => boolean;
    hasSidebar: () => boolean;
    hasHeader: () => boolean;
    hasContent: () => boolean;
    hasInfobar: () => boolean;
    hasFooter: () => boolean;
    toggleThemeMode: () => void;
    toggleHeaderVisibleMode: () => void;
    toggleFooterVisibleMode: () => void;
    toggleSidebarVisibleMode: () => void;
    toggleSidebarCollapsedMode: () => void;
    toggleInfobarVisibleMode: () => void;
    toggleInfobarCollapsedMode: () => void;
};
/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –º–∞–∫–µ—Ç–∞ "Lucent"
 * @namespace Lucent.LucentProps
 */
type LucentProps = {
    config: LayoutConfig;
};

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API –º–∞–∫–µ—Ç–∞
 * @namespace Lucent.useLayout
 */
declare const useLayout: () => LayoutApi;

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–∞–∫–µ—Ç–∞
 * @param {LayoutConfig} config –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–∫–µ—Ç–∞
 * @returns {LayoutConfig} –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–∫–µ—Ç–∞
 */
declare const normalizeConfig: (config: LayoutConfig) => LayoutConfig;

/**
 * –ú–∞–∫–µ—Ç "Lucent" (—Ö–∑ –ø–æ—á–µ–º—É —Ç–∞–∫ –Ω–∞–∑–≤–∞–ª, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç —Ç–∞–∫ üôÉ)
 * @namespace Lucent
 */
declare const Lucent: FC<LucentProps>;

export { Lucent, normalizeConfig, useLayout };
export type { LayoutConfig };
